---
# Source: tei-embedding-service/templates/tei-embedding-service-claim0-persistentvolumeclaim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: tei-embedding-service-claim0
  name: tei-embedding-service-claim0
  namespace: gaudi-llm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---
# Source: tei-embedding-service/templates/tei-embedding-service-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker_compose.yaml
    kompose.version: 1.33.0 (3ce457399)
  labels:
    io.kompose.service: tei-embedding-service
  name: tei-embedding-service
  namespace: gaudi-llm
spec:
  ports:
    - name: "8090"
      port: 8090
      targetPort: 8090
  selector:
    io.kompose.service: tei-embedding-service
---
# Source: tei-embedding-service/templates/tei-embedding-service-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker_compose.yaml
    kompose.version: 1.33.0 (3ce457399)
    argocd.argoproj.io/sync-wave: "5"
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"tei-gaudi:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"tei-embedding-gaudi-server\")].image"}]'
  labels:
    io.kompose.service: tei-embedding-service
  name: tei-embedding-service
  namespace: gaudi-llm
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: tei-embedding-service
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker_compose.yaml
        kompose.version: 1.33.0 (3ce457399)
      labels:
        io.kompose.network/chatqna-default: "true"
        io.kompose.service: tei-embedding-service
    spec:
      containers:
        - args:
            - --model-id
            - BAAI/bge-large-en-v1.5
            - --port
            - "8090"
          env:
            - name: HF_TOKEN
              valueFrom:
                secretKeyRef:
                  key: huggingface
                  name: hf-token-secret
            - name: OMPI_MCA_btl_vader_single_copy_mechanism
              value: none
            #- name: RUNTIME
            #  value: habana
            - name: HOME
              value: /tmp/temp-data
          image: tei-gaudi:latest
          name: tei-embedding-gaudi-server
          ports:
            - containerPort: 80
              protocol: TCP
          resources:
            limits:
              habana.ai/gaudi: "1"
            requests:
              habana.ai/gaudi: "1"
          volumeMounts:
            - mountPath: /data
              name: tei-embedding-service-claim0
            - mountPath: /dev/shm
              name: shm
            - name: temp-data
              mountPath: /tmp/temp-data
      restartPolicy: Always
      volumes:
        - name: tei-embedding-service-claim0
          persistentVolumeClaim:
            claimName: tei-embedding-service-claim0
        - name: shm
          emptyDir:
            medium: Memory
            sizeLimit: 2Gi
        - name: temp-data
          emptyDir: {}
---
# Source: tei-embedding-service/templates/tei-embedding-service-buildconfig.yaml
kind: BuildConfig
apiVersion: build.openshift.io/v1
metadata:
  name: tei-gaudi
  namespace: gaudi-llm
spec:
  output:
    to:
      kind: "ImageStreamTag"
      name: "tei-gaudi:latest"
  failedBuildsHistoryLimit: 5
  successfulBuildsHistoryLimit: 5
  nodeSelector: null
  postCommit: {}
  resources: {}
  runPolicy: SerialLatestOnly
  source:
    git:
      ref: a7ee6f1fe13ce8aed440d0baa0953cd8f5c23e0a
      uri: https://github.com/huggingface/tei-gaudi.git
    type: Git
  strategy:
    type: Docker
    dockerStrategy:
      dockerfilePath: Dockerfile-hpu
  triggers:
  - type: ConfigChange
---
# Source: tei-embedding-service/templates/tei-embedding-service-imagestream.yaml
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: tei-gaudi
  namespace: gaudi-llm
spec:
  lookupPolicy:
    local: true
