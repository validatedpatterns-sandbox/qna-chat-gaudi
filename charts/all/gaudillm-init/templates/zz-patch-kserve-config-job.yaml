apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/sync-wave: "102"
  name: zz-patch-kserve-progress-deadline
  namespace: {{ .Values.global.gaudillm.namespace }}
spec:
  template:
    spec:
      containers:
      - image: {{ .Values.job.image }}
        command:
        - /bin/bash
        - -c
        - |
          # wait for DSC to progress
          oc wait --for=condition=ReconcileComplete=True dsc/rhods-datasciencecluster --timeout=-1s
          # now we wait for Kserve to become Ready installing... 
          oc wait --for=condition=Ready=True -n knative-serving knativeserving knative-serving --timeout=-1s
          # Then we patch progressDeadline in Kserve Config since 70b might download longer > 600secs onto kserve
          '/tmp/patch-kserve-progress-deadline.sh'          
        name: patch-kserve-progress-deadline
        volumeMounts:
          - mountPath: /tmp/patch-kserve-progress-deadline.sh
            name: patch-kserve-progress-deadline
            subPath: patch-kserve-progress-deadline.sh
      volumes:
        - name: patch-kserve-progress-deadline
          configMap:
            name: patch-kserve-progress-deadline
            defaultMode: 0755
      dnsPolicy: ClusterFirst
      restartPolicy: Never
      serviceAccount: {{ .Values.serviceAccountName }}
      serviceAccountName: {{ .Values.serviceAccountName }}
      terminationGracePeriodSeconds: 400
